@startuml
class com.patch4code.loglinemovieapp.features.movie.domain.model.MovieVideos {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.MovieVideo {
}
class com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.MovieLogViewModel {
}
class com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.MovieLogViewModelFactory {
+ T create(Class<T>)
}

class com.patch4code.loglinemovieapp.features.movie.domain.model.WatchProvides {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.CountryProviders {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.Provider {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.MovieDetails {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.Collection {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.Genre {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.ProductionCompany {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.ProductionCountry {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.SpokenLanguage {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.MovieCredits {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.Cast {
}
class com.patch4code.loglinemovieapp.features.movie.domain.model.Crew {
}
class com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.AddToListViewModel {
-  _movieToAdd
-  _userMovieLists
+ LiveData<List<MovieList>> userMovieLists
+ void updateUserMovieLists()
+ void setMovieToAdd(Movie)
+ void addMovieToList(MovieList?)
}


class com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.AddToListViewModelFactory {
+ T create(Class<T>)
}

class com.patch4code.loglinemovieapp.features.movie.domain.model.MovieCollection {
}
class com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.MovieViewModel {
- TmdbApiService tmdbApiService
-  _detailsData
+ LiveData<MovieDetails> detailsData
-  _movieVideo
+ LiveData<MovieVideo?> movieVideo
-  _countryProviders
+ LiveData<CountryProviders?> countryProviders
-  _creditsData
+ LiveData<MovieCredits> creditsData
-  _collectionMovies
+ LiveData<List<Movie>> collectionMovies
-  _myRating
+ LiveData<Int> myRating
-  _onWatchlist
+ LiveData<Boolean> onWatchlist
-  _isLoading
+ LiveData<Boolean> isLoading
+ void loadAllMovieData(Int)
+ void loadMovieProviders(Int,String)
+ void loadRatingAndWatchlistStatusById(Int)
+ void changeRating(Int?,Int)
+ void changeOnWatchlist(Int?,Boolean)
}


class com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.MovieViewModelFactory {
+ T create(Class<T>)
}



com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.Factory <|.. com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.MovieLogViewModelFactory
androidx.lifecycle.ViewModel <|-- com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.AddToListViewModel
com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.Factory <|.. com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.AddToListViewModelFactory
androidx.lifecycle.ViewModel <|-- com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.MovieViewModel
com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.Factory <|.. com.patch4code.loglinemovieapp.features.movie.presentation.screen_movie.MovieViewModelFactory
@enduml